---
- hosts: kuberlab
  gather_facts: false
  become: yes
  vars:
    k3s_version: v1.21.1+k3s1 
    #provision_path: provisioning/files
  tasks:
    - name: Download k3s binary x64
      get_url:
        url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s
        checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt
        dest: /usr/local/bin/k3s
        owner: root
        group: root
        mode: 0755
      #when: ansible_facts.architecture == "x86_64"

    - name: Create Directories /etc/rancher/k3s/ and /appserver/rancher/k3s
      changed_when: false
      file:
        path: "{{ item }}"
        state: directory
        recurse: yes
      loop:
        - '/etc/rancher/k3s'
        - '/appserver/rancher/k3s'
    
    - name: Copy registries.yaml
      changed_when: false
      copy:
        src: "registries.yaml"
        dest: "/etc/rancher/k3s/"

    - name: Copy files k3s-master.service
      changed_when: false
      ansible.builtin.template:
        src: "files/k3s-master.service.j2"
        dest: /etc/systemd/system/k3s-master.service
      when: inventory_hostname == groups['kuberlab'][0]

    - name: Start & Enable k3s-master.service
      systemd:
        name: k3s-master.service
        state: started
        enabled: yes
        daemon-reload: yes
      when: inventory_hostname == groups['kuberlab'][0]

    - name: "Wait for Master..."
      wait_for_connection:
        delay: 120
    
    - name: Wait for port 6443 of master node
      wait_for:
        host: "{{ hostvars['master'].ansible_host }}"
        port: 6443
        delay: 60
        state: started
        timeout: 300
        msg: "Master is not ready..."
      ignore_errors: true
   
    - name: Read /appserver/rancher/k3s/server/token
      command: cat /appserver/rancher/k3s/server/token
      register: master_token
      when: inventory_hostname == groups['kuberlab'][0]

    - name: Copy files k3s-worker.service
      changed_when: false
      ansible.builtin.template:
        src: "files/k3s-worker.service.j2"
        dest: /etc/systemd/system/k3s-worker.service
      when: inventory_hostname != groups['kuberlab'][0]

    - name: Start & Enable k3s-worker.service
      systemd:
        name: k3s-worker.service
        state: started
        enabled: yes
        daemon-reload: yes
      when: inventory_hostname != groups['kuberlab'][0]

    - name: Get your Kubernetes Cluster information
      ansible.builtin.shell: echo "kubectl get nodes" && /usr/local/bin/k3s kubectl get node && echo "kubectl get namespaces" && /usr/local/bin/k3s kubectl get ns
      args:
        executable: /bin/bash
        warn: false
      register: get_node
      when: inventory_hostname == groups['kuberlab'][0]
    
    - name: Disply "kubectl get nodes" output
      ansible.builtin.debug:
        msg: "{{ get_node.stdout_lines }}"
        #var: get_node
        #verbosity: 6
      when: inventory_hostname == groups['kuberlab'][0]
    
    - name: Create directory .kube
      file:
        path: ~{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        mode: "u=rwx,g=rx,o="

    - name: Copy config file to user home directory
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ~{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        mode: "u=rw,g=,o="
    
    - name: Replace https://localhost:6443 by https://master-ip:6443
      command: >-
        k3s kubectl config set-cluster default
          --server=https://{{ master_ip }}:6443
          --kubeconfig ~{{ ansible_user }}/.kube/config
      changed_when: true
    
    - name: Create kubectl symlink
      file:
        src: /usr/local/bin/k3s
        dest: /usr/local/bin/kubectl
        state: link
    
    - name: Create crictl symlink
      file:
        src: /usr/local/bin/k3s
        dest: /usr/local/bin/crictl
        state: link

  #handlers:
  #  - name: restart network
  #    service:
  #      name: NetworkManager
  #      state: restarted
